#使用多阶段构建

#step 1/2
FROM golang:1.9-alpine as builder

RUN apk --no-cache add git

WORKDIR /go/src/github.com/go/helloworld/

RUN go get -d -v github.com/go-sql-driver/mysql

COPY app.go .

RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o app .


#step 2/2
FROM alpine:latest as prod

RUN apk --no-cache add ca-certificates

WORKDIR /root/



COPY --from=0 /go/src/github.com/go/helloworld/app .

CMD ["./app"]



#只构建某一阶段的镜像
#
#我们可以使用 as 来为某一阶段命名，例如
#
#FROM golang:1.9-alpine as builder
#
#例如当我们只想构建 builder 阶段的镜像时，我们可以在使用 docker build 命令时加上 --target 参数即可
#
#$ docker build --targekont builder -t username/imagename:tag .
#
#构建时从其他镜像复制文件
#
#上面例子中我们使用 COPY --from=0 /go/src/github.com/go/helloworld/app . 从上一阶段的镜像中复制文件，我们也可以复制任意镜像中的文件。
#
#$ COPY --from=nginx:latest /etc/nginx/nginx.conf /nginx.conf
